{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "env": {
        "type": "string",
        "defaultValue": "Prod",
        "metadata": {
          "description": "The environment you're deploying the application to. It will be used as a suffix to many of your resources"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Specifies the location for all resources."
        }
      },
      "skuName": {
        "type": "string",
        "defaultValue": "F1",
        "metadata": {
          "description": "Specifies the IotHub SKU."
        }
      },
      "capacityUnits": {
        "type": "int",
        "minValue": 1,
        "defaultValue": 1,
        "metadata": {
          "description": "Specifies the number of provisioned IoT Hub units. Restricted to 1 unit for the F1 SKU. Can be set up to maximum number allowed for subscription."
        }
      },
      "appName": {
        "type": "string",
        "maxLength": 24,
        "defaultValue": "CloudDoor",
        "metadata": {
          "description": "The name of the function app to create. Must be globally unique."
        }
      },
      "iotRetentionTimeInDays": {
        "type": "int",
        "minValue": 1,
        "defaultValue": 1,
        "metadata": {
          "description": "The number of days that the IoT logs will be preserved"
        }
      },
      "iotPartitionCount": {
        "type": "int",
        "minValue": 2,
        "defaultValue": 2,
        "metadata": {
          "description": "Number of IoT Hub partitions. The more partitions, the more messages from Device to Cloud can be processed in the same time"
        }
      }
    },
    "variables": {
      "appName": "[concat(parameters('appName'), parameters('env'))]",
      "adminAppName": "[concat(parameters('appName'), 'Admin', parameters('env'))]",
      "clientAppName": "[concat(parameters('appName'), 'Client', parameters('env'))]",
      "consumerGroupName": "[concat(variables('appName'), '/events/cg1')]",
      "hostingPlanName": "[toLower(variables('appName'))]",
      "storageAccountName": "[toLower(variables('appName'))]",
      "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "apiVersion": "2018-07-01",
        "location": "[resourceGroup().location]",
        "kind": "StorageV2",
        "sku": {
          "name": "Standard_LRS"
        }
      },
      {
        "apiVersion": "2015-05-01",
        "name": "[variables('adminAppName')]",
        "type": "Microsoft.Insights/components",
        "kind": "web",
        "location": "[resourceGroup().location]",
        "properties": {
            "Application_Type": "web",
            "ApplicationId": "[variables('adminAppName')]"
        }
      },
      {
        "apiVersion": "2015-05-01",
        "name": "[variables('clientAppName')]",
        "type": "Microsoft.Insights/components",
        "kind": "web",
        "location": "[resourceGroup().location]",
        "properties": {
            "Application_Type": "web",
            "ApplicationId": "[variables('clientAppName')]"
        }
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2016-09-01",
        "name": "[variables('hostingPlanName')]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Y1",
          "tier": "Dynamic",
          "size": "Y1",
          "family": "Y",
          "capacity": 0
        },
        "kind": "functionapp",
        "properties": {
            "name": "[variables('hostingPlanName')]",
            "perSiteScaling": false,
            "reserved": false,
            "targetWorkerCount": 0,
            "targetWorkerSizeId": 0
        }
      },
      {
        "apiVersion": "2015-08-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('adminAppName')]",
        "location": "[resourceGroup().location]",
        "kind": "functionapp",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('Microsoft.Insights/components', variables('adminAppName'))]",
            "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
        ],
        "properties": {
          "siteConfig": {
            "cors": {
              "allowedOrigins": ["*"]
            },
            "appSettings": [
                {
                    "name": "AzureWebJobsStorage",
                    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
                },
                {
                    "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
                },
                {
                    "name": "WEBSITE_CONTENTSHARE",
                    "value": "[concat(variables('storageAccountName'), 'admin-api')]"
                },
                {
                    "name": "FUNCTIONS_WORKER_RUNTIME",
                    "value": "node"
                },
                {
                    "name": "WEBSITE_NODE_DEFAULT_VERSION",
                    "value": "10.14.1"
                },
                {
                    "name": "FUNCTIONS_EXTENSION_VERSION",
                    "value": "~2"
                },
                {
                  "name": "IOT_REGISTRY_READ_WRITE_CONNECTION_STRING",
                  "value": "[concat('HostName=', reference(resourceId('Microsoft.Devices/IoTHubs', variables('appName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).hostName, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs', variables('appName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).value[0].primaryKey)]"
                }
            ]
          }
        }
      },
      {
        "apiVersion": "2015-08-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('clientAppName')]",
        "location": "[resourceGroup().location]",
        "kind": "functionapp",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('Microsoft.Insights/components', variables('clientAppName'))]",
            "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
        ],
        "properties": {
          "siteConfig": {
            "appSettings": [
                {
                    "name": "AzureWebJobsStorage",
                    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
                },
                {
                    "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]"
                },
                {
                    "name": "WEBSITE_CONTENTSHARE",
                    "value": "[concat(variables('storageAccountName'), 'client-api')]"
                },
                {
                    "name": "FUNCTIONS_WORKER_RUNTIME",
                    "value": "node"
                },
                {
                    "name": "WEBSITE_NODE_DEFAULT_VERSION",
                    "value": "10.14.1"
                },
                {
                    "name": "FUNCTIONS_EXTENSION_VERSION",
                    "value": "~2"
                },
                {
                  "name": "IOT_REGISTRY_READ_WRITE_CONNECTION_STRING",
                  "value": "[concat('HostName=', reference(resourceId('Microsoft.Devices/IoTHubs', variables('appName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).hostName, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs', variables('appName')), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).value[0].primaryKey)]"
                }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Devices/IotHubs",
        "apiVersion": "2018-04-01",
        "name": "[variables('appName')]",
        "location": "[parameters('location')]",
        "properties": {
          "eventHubEndpoints": {
            "events": {
              "retentionTimeInDays": "[parameters('iotRetentionTimeInDays')]",
              "partitionCount": "[parameters('iotPartitionCount')]"
            },
            "operationsMonitoringEvents": {
              "retentionTimeInDays": "[parameters('iotRetentionTimeInDays')]",
              "partitionCount": "[parameters('iotPartitionCount')]"
            }
          },
          "cloudToDevice": {
            "defaultTtlAsIso8601": "PT1H",
            "maxDeliveryCount": 10,
            "feedback": {
              "ttlAsIso8601": "PT1H",
              "lockDurationAsIso8601": "PT60S",
              "maxDeliveryCount": 10
            }
          },
          "messagingEndpoints": {
            "fileNotifications": {
              "ttlAsIso8601": "PT1H",
              "lockDurationAsIso8601": "PT1M",
              "maxDeliveryCount": 10
            }
          },
          "storageEndpoints": {
            "$default": {
                "sasTtlAsIso8601": "PT1H",
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'),'2015-05-01-preview').key1)]",
                "containerName": "uploads"
            }
          },
          "enableFileUploadNotifications": true
        },
        "sku": {
          "name": "[parameters('skuName')]",
          "capacity": "[parameters('capacityUnits')]"
        }
      },
      {
        "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups",
        "apiVersion": "2018-04-01",
        "name": "[variables('consumerGroupName')]",
        "dependsOn": [
          "[resourceId('Microsoft.Devices/IotHubs', variables('appName'))]"
        ]
      }
    ],
    "outputs": {
      "iotHubKeys": {
        "value": "[listKeys(resourceId('Microsoft.Devices/iotHubs', variables('appName')), '2018-04-01')]",
        "type": "object"
      }
    }
  }